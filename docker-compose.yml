services:
  grimoire:
    build: .
    extra_hosts:
      - "host.docker.internal:host-gateway" #Hostname for you database use "host.docker.internal:host-gateway" if database is hosted locally.
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      CONNECTIONSTRINGS__GRIMOIRE: #Your database Database String
      TOKEN: #Your DiscordToken
      CHANNELID: #Optional: Channel grimoire will post error logs to.
      GUILDID: #Optional: The guild that experimental commands will be registered to.
      #CONNECTIONSTRINGS__GRIMOIRE takes precident over the following properites.
      CONNECTIONPROPERTIES__HOSTNAME: host.docker.internal #The hostname of the database. Set to host.docker.internal if database is hosted locally.
      CONNECTIONPROPERTIES__PORT: 5432 #The port the database Uses
      CONNECTIONPROPERTIES__DBNAME: Grimoire #The name of the database.
      CONNECTIONPROPERTIES__USERNAME: Grimoire #The Database User
      CONNECTIONPROPERTIES__PASSWORD: #The Database User Password
  db:
    image: postgres:latest
    restart: unless-stopped
    command: -c ssl=on -c ssl_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem -c ssl_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: Grimoire
      POSTGRES_USER: Grimoire
      POSTGRES_PASSWORD: #Please Provide a secure password.
      PGUSER: Grimoire
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 10
  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080

